{"version":3,"sources":["webpack:///./src/components/PostCard/index.js","webpack:///./src/templates/blog.js"],"names":["PostCard","posts","className","filter","post","node","frontmatter","templateKey","map","style","border","padding","key","id","to","fields","slug","title","date","excerpt","PaginationLink","props","test","disabled","text","url","BlogPage","render","pageContext","this","group","index","first","last","previousUrl","toString","nextUrl","websiteSchemaOrgJSONLD","config","siteUrl","name","siteTitle","alternateName","siteTitleAlt","Layout","type","JSON","stringify","Component"],"mappings":"qMAmCeA,EAhCE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,yBAAKC,UAAU,aACZD,EACEE,QAAO,SAAAC,GAAI,MAA0C,iBAAtCA,EAAKC,KAAKC,YAAYC,eACrCC,KAAI,gBAASJ,EAAT,EAAGC,KAAH,OACH,yBACEH,UAAU,UACVO,MAAO,CAAEC,OAAQ,oBAAqBC,QAAS,WAC/CC,IAAKR,EAAKS,IAEV,2BACE,kBAAC,OAAD,CAAMX,UAAU,mBAAmBY,GAAIV,EAAKW,OAAOC,MAChDZ,EAAKE,YAAYW,OAEpB,qCACA,+BAAQb,EAAKE,YAAYY,OAE3B,2BACGd,EAAKe,QACN,6BACA,6BACA,kBAAC,OAAD,CAAMjB,UAAU,kBAAkBY,GAAIV,EAAKW,OAAOC,MAAlD,8B,oDClBd,IAAMI,EAAiB,SAAAC,GACrB,OAAKA,EAAMC,KAQP,0BAAMC,UAAQ,EAACrB,UAAU,qBACtBmB,EAAMG,MAPT,kBAAC,OAAD,CAAMV,GAAE,SAAWO,EAAMI,IAAOvB,UAAU,qBACvCmB,EAAMG,OAYME,E,gLACnBC,OAAA,WAAW,IACDC,EAAgBC,KAAKR,MAArBO,YACAE,EAA8BF,EAA9BE,MAAOC,EAAuBH,EAAvBG,MAAOC,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,KACvBC,EAAcH,EAAQ,GAAM,EAAI,IAAMA,EAAQ,GAAGI,WACjDC,GAAWL,EAAQ,GAAGI,WAAa,IAEnCE,EAAyB,CAC7B,WAAY,oBACZ,QAAS,UACTZ,IAAKa,IAAOC,QACZC,KAAMF,IAAOG,UACbC,cAAeJ,IAAOK,aAAeL,IAAOK,aAAe,IAG7D,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,iEAEA,4BAAQC,KAAK,uBACVC,KAAKC,UAAUV,KAGpB,6BAASnC,UAAU,2BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,SAAd,mBASZ,6BAASA,UAAU,WACjB,kBAAC,EAAD,CAAUD,MAAO6B,IACjB,6BAAS5B,UAAU,WACjB,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CAAgBoB,KAAMU,EAAOP,IAAKS,EAAaV,KAAK,eACpD,kBAAC,EAAD,CAAgBF,KAAMW,EAAMR,IAAKW,EAASZ,KAAK,qB,GA5CvBwB","file":"component---src-templates-blog-js-3e3bf51df7d56d82e4fe.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nconst PostCard = ({ posts }) => {\r\n  return (\r\n    <div className='container'>\r\n      {posts\r\n        .filter(post => post.node.frontmatter.templateKey === 'article-page')\r\n        .map(({ node: post }) => (\r\n          <div\r\n            className='content'\r\n            style={{ border: '1px solid #eaecee', padding: '2em 4em' }}\r\n            key={post.id}\r\n          >\r\n            <p>\r\n              <Link className='has-text-primary' to={post.fields.slug}>\r\n                {post.frontmatter.title}\r\n              </Link>\r\n              <span> &bull; </span>\r\n              <small>{post.frontmatter.date}</small>\r\n            </p>\r\n            <p>\r\n              {post.excerpt}\r\n              <br />\r\n              <br />\r\n              <Link className='button is-small' to={post.fields.slug}>\r\n                                Baca selengkapnya â†’\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostCard\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport config from '../../config'\r\nimport Helmet from 'react-helmet'\r\nimport PostCard from '../components/PostCard'\r\nimport Layout from '../components/Layout'\r\n\r\nconst PaginationLink = props => {\r\n  if (!props.test) {\r\n    return (\r\n      <Link to={`/blog/${props.url}`} className='button is-rounded'>\r\n        {props.text}\r\n      </Link>\r\n    )\r\n  } else {\r\n    return (\r\n      <span disabled className='button is-rounded'>\r\n        {props.text}\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class BlogPage extends Component {\r\n  render () {\r\n    const { pageContext } = this.props\r\n    const { group, index, first, last } = pageContext\r\n    const previousUrl = index - 1 === 1 ? '' : (index - 1).toString()\r\n    const nextUrl = (index + 1).toString() + '/'\r\n\r\n    const websiteSchemaOrgJSONLD = {\r\n      '@context': 'http://schema.org',\r\n      '@type': 'WebSite',\r\n      url: config.siteUrl,\r\n      name: config.siteTitle,\r\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\r\n    }\r\n\r\n    return (\r\n      <Layout>\r\n        <Helmet>\r\n          <title>Blog | Gatsby Starter Business</title>\r\n          {/* Schema.org tags */}\r\n          <script type='application/ld+json'>\r\n            {JSON.stringify(websiteSchemaOrgJSONLD)}\r\n          </script>\r\n        </Helmet>\r\n        <section className='hero is-primary is-bold'>\r\n          <div className='hero-body'>\r\n            <div className='container'>\r\n              <div className='columns'>\r\n                <div className='column is-10 is-offset-1'>\r\n                  <div className='section'>\r\n                    <h1 className='title'>\r\n                     Blog kami\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className='section'>\r\n          <PostCard posts={group} />\r\n          <section className='section'>\r\n            <div className='buttons is-centered'>\r\n              <PaginationLink test={first} url={previousUrl} text='Sebelumnya' />\r\n              <PaginationLink test={last} url={nextUrl} text='Selanjutnya' />\r\n            </div>\r\n          </section>\r\n        </section>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}